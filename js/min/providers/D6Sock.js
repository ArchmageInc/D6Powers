!function(ng){ng.module("D6App").factory("D6Sock",["$firebase","$filter","FirebaseUrl","D6Utils",function($firebase,$filter,firebaseUrl,$d6){"use strict";function cleanObject($object){try{if(ng.isArray($object))for(var i=0;i<$object.length;i++)cleanObject($object[i]);return $d6.addD6Properties($object,{$id:void 0,$priority:void 0}),$object}catch(ex){return $object}}function D6Sock(apiEnd){$d6.addD6Property(this,"$sock",$firebase(new Firebase(firebaseUrl+"/"+apiEnd+"/")))}return D6Sock.prototype={get:function(query,extrapolate){extrapolate=extrapolate===!0;var $sock=this.$sock;return"function"==typeof query&&(query=query()),"string"==typeof query||"number"==typeof query?$firebase($sock.$ref().child(String(query))).$asObject().$loaded().then(function($object){return cleanObject($object)}):$sock.$asArray().$loaded().then(function($array){if(!query&&!extrapolate)return cleanObject($array);var results=$filter("filter")($array,query);if(!extrapolate)return cleanObject(1===results.length?results[0]:results);for(var objects=[],i=0;i<results.length;i++){var $object=$array.$getRecord($array.$keyAt(results[i]));objects.push($object)}return cleanObject(1===objects.length?objects[0]:objects)})},remove:function(object){var id=object.$id||object.id;return id?this.$sock.$remove(id):!1},save:function(object){var id=object.$id||object.id;return(object.new||!object.created)&&(object.new=!1,object.updated=Date.now(),object.created=Date.now()),this.$sock.$set(id,cleanObject(object))},_uniqueId:function(){return this.$sock.$push().then(function(Ref){return Ref.name()})}},D6Sock}])}(angular);