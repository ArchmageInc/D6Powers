!function(ng){ng.module("D6App").controller("CharacterCtlr",["$window","$scope","$q","D6Utils","D6Toolbox","D6Tool","D6Character",function($window,$scope,$q,$d6,$toolbox,Tool,Character){"use strict";function CharacterRevision(path,oldValue,newValue){this.path=path,this.oldValue=oldValue,this.newValue=newValue}function CharacterWatcher(path){this.path=path,this.cancel=$scope.$watch(path,function(newValue,oldValue){if(newValue!==oldValue&&null!==newValue&&null!==oldValue){if($scope.controls.invalid&&($scope.character.revisions.pop(),$scope.controls.revision--),$scope.controls.invalid||$scope.controls.undoing||$scope.controls.redoing||!$scope.controls.editing)return $scope.controls.undoing=!1,$scope.controls.redoing=!1,void($scope.controls.invalid=!1);$scope.controls.revision<$scope.character.revisions.length&&$scope.character.revisions.splice($scope.controls.revision,$scope.character.revisions.length-$scope.controls.revision),$scope.character.revisions.push(new CharacterRevision(path,oldValue,newValue)),$scope.controls.revision++,$scope.controls.changes=!0}})}function unwatchCharacter(){for(;characterWatchers.length;)characterWatchers.pop().cancel()}function applyCharacterWatch(){unwatchCharacter(),ng.forEach($d6.getFlatPaths($scope.character,"character"),function(path){characterWatchers.push(new CharacterWatcher(path))})}function onChangePhysique(newPhysiqueRank){newPhysiqueRank&&!isNaN(newPhysiqueRank)&&($scope.character.bodyPoints=20+$d6.roll(Number(newPhysiqueRank)))}function onChangeLoad(newLoading){$scope.controls.loading=newLoading}function undoChanges(){for(;undo(););$scope.character.revisions.splice(0,$scope.character.revisions.length),$scope.controls.editing=!1,$scope.controls.changes=!1}function undo(){if($scope.controls.revision--,0==$scope.character.revisions.length||$scope.controls.revision<0)return $scope.controls.revision=0,$scope.controls.changes=!1,!1;var revision=$scope.character.revisions[$scope.controls.revision],object=$d6.getFromPath($scope,revision.path,1);return object.target[object.nextPath]=revision.oldValue,$scope.controls.undoing=!0,$scope.controls.changes=$scope.controls.revision?$scope.controls.changes:!1,!0}function redo(){if($scope.controls.revision>=$scope.character.revisions.length)return $scope.controls.revision=$scope.character.revisions.length,!1;var revision=$scope.character.revisions[$scope.controls.revision],object=$d6.getFromPath($scope,revision.path,1);return object.target[object.nextPath]=revision.newValue,$scope.controls.redoing=!0,$scope.controls.changes=!0,$scope.controls.revision++,!0}function removeCharacter(){$scope.character.remove().then(function(){$scope.controls.editing=!1,$scope.controls.changes=!1})}function saveCharacter(){$scope.character.save().then(function(){$scope.controls.changes=!1,$scope.controls.editing=!1,$scope.controls.revision=0,$scope.character.revisions.splice(0,$scope.character.revisions.length)})}function editCharacter(){applyCharacterWatch(),$scope.controls.editing=!0}function closeRemoveDialog(){$scope.controls.confirmations.remove=null}function closeChangeDialog(){$scope.controls.confirmations.changes=null}function generateCharacter(){unwatchCharacter(),$scope.character=new Character,ng.extend($scope.controls,{editing:!1,changes:!1,undoing:!1,redoing:!1,invalid:!1,loading:!0,revision:0})}var characterWatchers=[];$scope.controls={editing:!1,changes:!1,undoing:!1,redoing:!1,invalid:!1,loading:!0,revision:0,confirmations:{remove:null,changes:null}},$scope.characterUserId&&$scope.characterId?Character.get($scope.characterUserId,$scope.characterId).then(function($character){$scope.character=$character,$scope.controls.loading=$scope.character.loading}):($scope.character=new Character,$scope.controls.loading=$scope.character.loading),$scope.$watch("character.attributes.Physique.rank",onChangePhysique),$scope.$watch("character.loading",onChangeLoad),$scope.$watchCollection("character",applyCharacterWatch);var tools=[new Tool({icon:"spinner5",name:"Regenerate",description:"Regenerate Character",show:function(){return $scope.character?$scope.character.new:!1},disable:function(){return $scope.character?!$scope.character.new:!0},use:function(){if($scope.controls.changes){var def=$q.defer();def.promise.then(generateCharacter).finally(closeChangeDialog),$scope.controls.confirmations.changes=def}else generateCharacter()}}),new Tool({icon:"blocked",name:"cancel",description:"Cancel Changes",show:function(){return $scope.controls.editing},use:function(){if($scope.controls.changes){var def=$q.defer();def.promise.then(undoChanges).finally(closeChangeDialog),$scope.controls.confirmations.changes=def}else $scope.controls.editing=!1}}),new Tool({icon:"undo",name:"undo",description:"Undo Change",show:function(){return $scope.controls.changes},disable:function(){return $scope.controls.revision<=0},use:undo}),new Tool({icon:"redo",name:"redo",description:"Redo Change",show:function(){return $scope.controls.changes},disable:function(){return $scope.character?$scope.controls.revision>=$scope.character.revisions.length:!0},use:redo}),new Tool({icon:"disk",name:"save",description:"Save Character",show:function(){return $scope.character?$scope.controls.changes&&$scope.character.editable:!1},use:saveCharacter}),new Tool({icon:"pencil",name:"edit",description:"Edit Character",show:function(){return $scope.character?!$scope.controls.editing&&$scope.character.editable:!1},use:editCharacter}),new Tool({icon:"remove2",name:"delete",description:"Delete Character",show:function(){return $scope.character?$scope.controls.editing&&$scope.character.editable&&!$scope.character.new:!1},use:function(){var def=$q.defer();def.promise.then(removeCharacter).finally(closeRemoveDialog),$scope.controls.confirmations.remove=def}}),new Tool({icon:"print",name:"print",description:"Print Character",use:function(){$window.print()}})];$toolbox.add(tools)}])}(angular);