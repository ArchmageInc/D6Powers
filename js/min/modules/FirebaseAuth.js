!function(ng){ng.module("FirebaseAuth",["firebase"]).provider("$firebaseAuth",function(){"use strict";var FirebaseURL="";this.setUrl=function(url){FirebaseURL=url},this.$get=["$firebase","$firebaseSimpleLogin",function($firebase,$firebaseSimpleLogin){var authService,authUser,$userSync,ref=new Firebase(FirebaseURL),$auth=$firebaseSimpleLogin(ref),normalizer={defaultUser:{name:{first:"",last:"",middle:""},imageUrl:"",email:"",provider:"",provider_id:"",displayName:"",authenticated:!1,authenticating:!1},facebook:function(providerData,user){ng.extend(user,{name:{first:providerData.first_name,last:providerData.last_name,middle:""},imageUrl:providerData.picture.data.url,email:""})},google:function(providerData,user){ng.extend(user,{name:{first:providerData.given_name,last:providerData.family_name,middle:""},imageUrl:providerData.picture,email:providerData.email})},github:function(providerData,user){ng.extend(user,{name:{first:providerData.name.split(" ")[0],last:providerData.name.split(" ")[1]||"",middle:""},imageUrl:providerData.avatar_url,email:providerData.email})},twitter:function(providerData,user){ng.extend(user,{name:{first:providerData.name.split(" ")[0],last:providerData.name.split(" ")[1]||"",middle:""},imageUrl:providerData.profile_image_url,email:""})},normalize:function(providerUser,user){return"function"!=typeof this[providerUser.provider]?(console.log("Unknown provider "+providerUser.provider+". Unable to normalize user"),null):(ng.extend(user,{provider:providerUser.provider,provider_id:providerUser.id,displayName:providerUser.displayName,uid:providerUser.uid}),this[providerUser.provider](providerUser.thirdPartyUserData,user),user)},clense:function(data,obj){obj=obj||this.defaultUser;var cleanData={};for(var k in obj)void 0!==data[k]&&"object"==typeof obj[k]&&"object"==typeof data[k]?cleanData[k]=this.clense(data[k],obj[k]):void 0!==data[k]&&"object"!=typeof data[k]&&(cleanData[k]=data[k]);return cleanData},clear:function(user){return user=user||{},ng.extend(user,this.defaultUser),user.name=ng.extend({},this.defaultUser.name),user}},saveUser=function(){return authUser.uid?$firebase(ref.child("users")).$set(authUser.uid,authUser):void 0},updateUser=function(userData){userData&&(ng.extend(authUser,normalizer.clense(userData)),authUser.authenticated||logout())},processUser=function(providerUser){return providerUser&&providerUser.uid?normalizer.normalize(providerUser,authUser)?(authUser.authenticated=!0,authUser.authenticating=!1,saveUser().then(setupUserRef,logout)):void logout("Unable to normalize: Unknown provider"):(authUser.authenticating=!1,void saveUser())},clearUser=function(){saveUser(),removeUserRef(),normalizer.clear(authUser)},login=function(provider){authUser.authenticating=!0,provider?$auth.$login(provider).then(processUser,logout):$auth.$getCurrentUser().then(processUser,logout)},logout=function(error){authUser.loginError=error||null,authUser.authenticated=!1,clearUser(),$auth.$logout()},removeUserRef=function(){$userSync&&($userSync.$destroy(),$userSync=null)},setupUserRef=function(){removeUserRef(),authUser.uid&&($userSync=$firebase(new Firebase(FirebaseURL+"/users/"+authUser.uid)).$asObject(),$userSync.$watch(function(){updateUser($userSync)}))},getToken=function(){return $auth.user?$auth.user.firebaseAuthToken:void 0};return authUser=normalizer.clear(),authService={login:login,logout:logout,user:authUser,getToken:getToken},login(),authService}]})}(angular);